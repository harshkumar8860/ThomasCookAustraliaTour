<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="2" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-09T06:26:45 IST" name="ThomasCookSuite" finished-at="2025-09-09T06:30:03 IST" duration-ms="198186">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-09-09T06:26:45 IST" name="CucumberTests" finished-at="2025-09-09T06:30:03 IST" duration-ms="198186">
      <class name="testRunners.RunCucumberTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" started-at="2025-09-09T06:26:45 IST" name="setUpClass" finished-at="2025-09-09T06:26:47 IST" duration-ms="2341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5fa07e12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" started-at="2025-09-09T06:26:47 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T06:27:05 IST" duration-ms="18028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Open homepage and verify title contains Thomas Cook"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Thomas Cook Homepage checks"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" started-at="2025-09-09T06:27:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T06:27:44 IST" duration-ms="38288" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login failed with invalid login ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login on ThomasCook"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.id: sendOTP (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.157, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58469}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58469/devtoo..., se:cdpVersion: 139.0.7258.157, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1064a9116120ae9ccad1e62b029988f2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.id: sendOTP (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.157, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58469}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58469/devtoo..., se:cdpVersion: 139.0.7258.157, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1064a9116120ae9ccad1e62b029988f2
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pages.LoginPage.login(LoginPage.java:65)
at stepDefinitions.LoginSteps.i_enter_login_details_and_send_otp(LoginSteps.java:28)
at ✽.I enter login details "invalidUser9" and send OTP(file:///C:/Users/dell/Desktop/project/ThomasCookAutomation/ThomasCookAutomation/src/test/resources/features/login.feature:6)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" started-at="2025-09-09T06:27:44 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T06:29:13 IST" duration-ms="88806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successful login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Login on ThomasCook"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" started-at="2025-09-09T06:29:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T06:29:35 IST" duration-ms="22417" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register with invalid details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration on Thomas Cook website"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unexpected error message! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unexpected error message! expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at stepDefinitions.RegistrationSteps.i_should_see_error_messages_for_invalid_inputs(RegistrationSteps.java:242)
at ✽.I should see error messages for invalid inputs(file:///C:/Users/dell/Desktop/project/ThomasCookAutomation/ThomasCookAutomation/src/test/resources/features/registration.feature:16)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" started-at="2025-09-09T06:29:35 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-09T06:29:55 IST" duration-ms="20171" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register with valid details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration on Thomas Cook website"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at stepDefinitions.RegistrationSteps.i_should_be_redirected_to_home_page_without_error(RegistrationSteps.java:248)
at ✽.I should be redirected to the home page without error(file:///C:/Users/dell/Desktop/project/ThomasCookAutomation/ThomasCookAutomation/src/test/resources/features/registration.feature:35)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testRunners.RunCucumberTest@2a5c8d3f]" started-at="2025-09-09T06:29:55 IST" name="tearDownClass" finished-at="2025-09-09T06:30:03 IST" duration-ms="8013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testRunners.RunCucumberTest -->
    </test> <!-- CucumberTests -->
  </suite> <!-- ThomasCookSuite -->
</testng-results>
